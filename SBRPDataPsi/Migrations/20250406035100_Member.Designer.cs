// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SBRPDataPsi.Models;

#nullable disable

namespace SBRPDataPsi.Migrations
{
    [DbContext(typeof(PsiDbContext))]
    [Migration("20250406035100_Member")]
    partial class Member
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("psi")
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<short>("seqBaseWebPageSIG", "psi")
                .StartsAt(501L);

            modelBuilder.HasSequence<short>("seqCompany", "common")
                .StartsAt(5001L);

            modelBuilder.HasSequence<short>("seqDepartment", "common")
                .StartsAt(2001L);

            modelBuilder.HasSequence<short>("seqDivisionNo", "common")
                .StartsAt(1601L);

            modelBuilder.HasSequence<int>("seqEmployee", "common")
                .StartsAt(10001L);

            modelBuilder.HasSequence<short>("seqPermissionGroup", "psi")
                .StartsAt(4001L);

            modelBuilder.HasSequence<short>("seqPosition", "common")
                .StartsAt(1001L);

            modelBuilder.HasSequence<int>("seqProduct", "psi")
                .StartsAt(10001L);

            modelBuilder.HasSequence<byte>("seqProductGeneralCategoryDefinition", "psi")
                .StartsAt(11L);

            modelBuilder.HasSequence<short>("seqProductGeneralCategoryItem", "psi")
                .StartsAt(8001L);

            modelBuilder.HasSequence<short>("seqStock", "psi")
                .StartsAt(1001L);

            modelBuilder.HasSequence<short>("seqStore", "psi")
                .StartsAt(2001L);

            modelBuilder.HasSequence<short>("seqStoreRegion", "psi")
                .StartsAt(12L);

            modelBuilder.HasSequence<short>("seqSupplier", "psi")
                .StartsAt(6001L);

            modelBuilder.HasSequence<short>("seqSupplierGroup", "psi")
                .StartsAt(101L);

            modelBuilder.HasSequence<byte>("seqSystemIsolationGroup", "common")
                .StartsAt(11L);

            modelBuilder.HasSequence<short>("seqUser", "common")
                .StartsAt(3001L);

            modelBuilder.Entity("SBRPData.Models.Company", b =>
                {
                    b.Property<short>("CompanyNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("NEXT VALUE FOR common.seqCompany");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("ApprovedPerson")
                        .HasColumnType("smallint");

                    b.Property<string>("CompanyAddress")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CompanyDirector")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("CHAR(16)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CompanyNameAbbr")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CompanyPhone")
                        .HasMaxLength(16)
                        .HasColumnType("VARCHAR(16)");

                    b.Property<string>("CompanyWeb")
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR(64)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("PostalAddress")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<byte>("SIGNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("SubmittedPerson")
                        .HasColumnType("smallint");

                    b.Property<string>("TaxId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("CHAR(10)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("CompanyNo");

                    b.HasIndex("CompanyId", "SIGNo")
                        .IsUnique();

                    b.ToTable("Company", "common");

                    b.HasData(
                        new
                        {
                            CompanyNo = (short)-1,
                            CompanyAddress = "",
                            CompanyDirector = "",
                            CompanyId = "_PREDEF_",
                            CompanyName = "(PreDefine)",
                            CompanyNameAbbr = "PreDef",
                            CompanyPhone = "",
                            CompanyWeb = "",
                            CreatedDate = new DateTime(2025, 4, 6, 11, 50, 59, 420, DateTimeKind.Local).AddTicks(3183),
                            CreatedPerson = (short)90,
                            IsDeleted = false,
                            IsDisabled = true,
                            IsSystemPredefined = true,
                            PostalAddress = "",
                            Remark = "",
                            SIGNo = (byte)0,
                            TaxId = "_PREDEF_"
                        });
                });

            modelBuilder.Entity("SBRPData.Models.CompanyContactPerson", b =>
                {
                    b.Property<short>("CompanyNo")
                        .HasColumnType("smallint");

                    b.Property<short>("ContactItemNo")
                        .HasColumnType("smallint");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(16)
                        .HasColumnType("VARCHAR(16)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("CreatedPerson")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedPerson")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR(64)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(16)
                        .HasColumnType("VARCHAR(16)");

                    b.Property<int?>("PersonNo")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("Title")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedPerson")
                        .HasColumnType("int");

                    b.HasKey("CompanyNo", "ContactItemNo");

                    b.HasIndex("PersonNo");

                    b.ToTable("CompanyContactPerson", "common");
                });

            modelBuilder.Entity("SBRPData.Models.Department", b =>
                {
                    b.Property<short>("DepartmentNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("NEXT VALUE FOR common.seqDepartment");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("ApprovedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("DepartmentNameAbbr")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<short?>("DivisionNo")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<short?>("ParentDepartmentNo")
                        .HasColumnType("smallint");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<byte>("SIGNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("SubmittedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("DepartmentNo");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DivisionNo");

                    b.HasIndex("ParentDepartmentNo");

                    b.HasIndex("DepartmentId", "SIGNo")
                        .IsUnique()
                        .HasFilter("[DepartmentId] IS NOT NULL");

                    b.ToTable("Department", "common");

                    b.HasData(
                        new
                        {
                            DepartmentNo = (short)-1,
                            CreatedDate = new DateTime(2025, 4, 6, 11, 50, 59, 420, DateTimeKind.Local).AddTicks(6430),
                            CreatedPerson = (short)90,
                            DepartmentId = "_PREDEF_",
                            DepartmentName = "(PreDefine)",
                            DepartmentNameAbbr = "PreDef",
                            IsDeleted = false,
                            IsDisabled = true,
                            IsSystemPredefined = true,
                            Remark = "",
                            SIGNo = (byte)0
                        });
                });

            modelBuilder.Entity("SBRPData.Models.Division", b =>
                {
                    b.Property<short>("DivisionNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("NEXT VALUE FOR common.seqDivisionNo");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("ApprovedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<string>("DivisionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("DivisionNameAbbr")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsInvisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<byte>("SIGNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("SubmittedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("DivisionNo");

                    b.HasIndex("DivisionId");

                    b.HasIndex("DivisionId", "SIGNo")
                        .IsUnique()
                        .HasFilter("[DivisionId] IS NOT NULL");

                    b.ToTable("Division", "common");
                });

            modelBuilder.Entity("SBRPData.Models.Employee", b =>
                {
                    b.Property<short>("EmployeeNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("EmployeeNo"));

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("ApprovedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("CHAR(16)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsInvisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<int>("PersonNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR common.seqEmployee");

                    b.Property<short?>("PositionNo")
                        .HasColumnType("smallint");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<byte>("SIGNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("SubmittedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("EmployeeNo");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PersonNo");

                    b.HasIndex("EmployeeId", "SIGNo")
                        .IsUnique()
                        .HasFilter("[EmployeeId] IS NOT NULL");

                    b.ToTable("Employee", "common");
                });

            modelBuilder.Entity("SBRPData.Models.Person", b =>
                {
                    b.Property<int>("PersonNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR common.seqEmployee");

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("PersonId")
                        .HasColumnType("CHAR(16)");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Remark")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<byte>("SIGNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<byte>("Sex")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("PersonNo");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonId", "SIGNo")
                        .IsUnique()
                        .HasFilter("[PersonId] IS NOT NULL");

                    b.ToTable("Person", "common");

                    b.HasData(
                        new
                        {
                            PersonNo = -1,
                            CreatedDate = new DateTime(2025, 4, 6, 11, 50, 59, 413, DateTimeKind.Local).AddTicks(5057),
                            CreatedPerson = (short)90,
                            IsDeleted = false,
                            IsDisabled = true,
                            IsSystemPredefined = true,
                            PersonId = "_PREDEF_",
                            PersonName = "(PreDefine)",
                            Remark = "",
                            SIGNo = (byte)0,
                            Sex = (byte)0
                        },
                        new
                        {
                            PersonNo = 1,
                            CreatedDate = new DateTime(2025, 4, 6, 11, 50, 59, 420, DateTimeKind.Local).AddTicks(6973),
                            CreatedPerson = (short)90,
                            IsDeleted = false,
                            IsDisabled = false,
                            IsSystemPredefined = true,
                            PersonId = "ADMIN",
                            PersonName = "ADMINISTRATOR",
                            Remark = "",
                            SIGNo = (byte)0,
                            Sex = (byte)0
                        });
                });

            modelBuilder.Entity("SBRPData.Models.PersonContactPhone", b =>
                {
                    b.Property<int>("PersonNo")
                        .HasColumnType("int");

                    b.Property<byte>("ItemNo")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ContactPhoneType")
                        .HasColumnType("tinyint");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.HasKey("PersonNo", "ItemNo");

                    b.ToTable("PersonContactPhone", "common");
                });

            modelBuilder.Entity("SBRPData.Models.Position", b =>
                {
                    b.Property<short>("PositionNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("NEXT VALUE FOR common.seqPosition");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("ApprovedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("PositionId")
                        .HasColumnType("CHAR(12)");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("PositionNameAbbr")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<byte>("SIGNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("SubmittedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("PositionNo");

                    b.HasIndex("PositionId");

                    b.ToTable("Position", "common");
                });

            modelBuilder.Entity("SBRPData.Models.SystemIsolationGroup", b =>
                {
                    b.Property<byte>("SIGNo")
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("NEXT VALUE FOR common.seqSystemIsolationGroup");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("ApprovedPerson")
                        .HasColumnType("smallint");

                    b.Property<short>("CompanyNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("SIGId")
                        .IsRequired()
                        .HasColumnType("CHAR(12)");

                    b.Property<string>("SIGName")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("SubmittedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("SIGNo");

                    b.HasIndex("SIGId")
                        .IsUnique();

                    b.ToTable("SystemIsolationGroup", "common");
                });

            modelBuilder.Entity("SBRPData.Models.User", b =>
                {
                    b.Property<short>("UserNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("NEXT VALUE FOR common.seqUser");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("ApprovedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("EmployeeNo")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<bool>("HasBeenLocked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsLoggedOn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadonly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("LastLoggedOnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLoggedOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastPasswordFailedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LockedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasColumnType("CHAR(32)");

                    b.Property<short?>("PasswordFailureAttemptCount")
                        .HasColumnType("smallint");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("VARCHAR(128)");

                    b.Property<int>("PersonNo")
                        .HasColumnType("int");

                    b.Property<byte>("SIGNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("SubmittedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.Property<short>("UserGroupNo")
                        .HasColumnType("smallint");

                    b.Property<string>("UserId")
                        .HasColumnType("CHAR(16)");

                    b.Property<short>("UserRoleNo")
                        .HasColumnType("smallint");

                    b.HasKey("UserNo");

                    b.HasIndex("LoginId");

                    b.HasIndex("PersonNo");

                    b.HasIndex("UserId", "SIGNo")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("User", "common");

                    b.HasData(
                        new
                        {
                            UserNo = (short)-1,
                            CreatedDate = new DateTime(2025, 4, 6, 11, 50, 59, 419, DateTimeKind.Local).AddTicks(1762),
                            CreatedPerson = (short)90,
                            Email = "",
                            HasBeenLocked = false,
                            IsDeleted = false,
                            IsDisabled = true,
                            IsReadonly = false,
                            IsSystemPredefined = true,
                            LoginId = "_PREDEF_",
                            PasswordHash = "_PREDEF_",
                            PersonNo = -1,
                            SIGNo = (byte)0,
                            UserGroupNo = (short)0,
                            UserId = "_PREDEF_",
                            UserRoleNo = (short)0
                        },
                        new
                        {
                            UserNo = (short)1,
                            CreatedDate = new DateTime(2025, 4, 6, 11, 50, 59, 420, DateTimeKind.Local).AddTicks(7060),
                            CreatedPerson = (short)90,
                            Email = "",
                            HasBeenLocked = false,
                            IsDeleted = false,
                            IsDisabled = false,
                            IsReadonly = false,
                            IsSystemPredefined = true,
                            LoginId = "ADMIN",
                            PasswordHash = "MjZALnvidPPUogKCJ8w9wg==",
                            PersonNo = 1,
                            SIGNo = (byte)0,
                            UserGroupNo = (short)0,
                            UserId = "ADMIN",
                            UserRoleNo = (short)0
                        });
                });

            modelBuilder.Entity("SBRPData.Models.UserLoginHistory", b =>
                {
                    b.Property<int>("UserLoginHistoryNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserLoginHistoryNo"));

                    b.Property<byte>("AppId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("HasBeenLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAccountDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLoginSuccessful")
                        .HasColumnType("bit");

                    b.Property<int>("LoginActionNo")
                        .HasColumnType("int");

                    b.Property<string>("LoginId")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<string>("RemoteIpAddress")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("UserLoginHistoryNo");

                    b.ToTable("UserLoginHistory", "common");
                });

            modelBuilder.Entity("SBRPData.Models.UserLoginToken", b =>
                {
                    b.Property<DateOnly>("IssuedDate")
                        .HasColumnType("date");

                    b.Property<short>("UserNo")
                        .HasColumnType("smallint");

                    b.Property<byte>("SerialNo")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AppId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("InValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("InvalidDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginActionNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginActionNo"));

                    b.Property<string>("RemoteIpAddress")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("WebToken")
                        .IsRequired()
                        .HasColumnType("CHAR(32)");

                    b.HasKey("IssuedDate", "UserNo", "SerialNo");

                    b.HasIndex("UserNo");

                    b.HasIndex("WebToken");

                    b.ToTable("UserLoginToken", "common");
                });

            modelBuilder.Entity("SBRPData.Models.UserPasswordHistory", b =>
                {
                    b.Property<int>("HistoryNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryNo"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("LoginActionNo")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("VARCHAR(128)");

                    b.Property<short>("UserNo")
                        .HasColumnType("smallint");

                    b.HasKey("HistoryNo");

                    b.HasIndex("UserNo");

                    b.ToTable("UserPasswordHistory", "common");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.AppUser", b =>
                {
                    b.Property<short>("UserNo")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("AppExpirationDate")
                        .HasColumnType("date");

                    b.Property<short>("AppUserGroupNo")
                        .HasColumnType("smallint");

                    b.Property<short>("AppUserRoleNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAppDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsAppReadonly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("UserNo");

                    b.ToTable("AppUser", "psi");

                    b.HasData(
                        new
                        {
                            UserNo = (short)1,
                            AppUserGroupNo = (short)0,
                            AppUserRoleNo = (short)0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedPerson = (short)0,
                            IsAppDisabled = false,
                            IsAppReadonly = false
                        });
                });

            modelBuilder.Entity("SBRPDataPsi.Models.BaseWebPageSIG", b =>
                {
                    b.Property<short>("SIGPageNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("NEXT VALUE FOR psi.seqBaseWebPageSIG");

                    b.Property<short?>("NodeNo")
                        .HasColumnType("smallint");

                    b.Property<string>("PageDescripion")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("PageId")
                        .IsRequired()
                        .HasColumnType("CHAR(8)");

                    b.Property<string>("PageTitle")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<short?>("ParentSIGPageNo")
                        .HasColumnType("smallint");

                    b.Property<byte>("SIGNo")
                        .HasColumnType("tinyint");

                    b.HasKey("SIGPageNo");

                    b.HasIndex("ParentSIGPageNo");

                    b.HasIndex("NodeNo", "SIGNo");

                    b.HasIndex("PageId", "SIGNo")
                        .IsUnique();

                    b.ToTable("BaseWebPageSIG", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.BaseWebPageTemplate", b =>
                {
                    b.Property<string>("PageId")
                        .HasColumnType("CHAR(8)");

                    b.Property<string>("MenuitemNodeId")
                        .HasColumnType("CHAR(8)");

                    b.Property<string>("PageDescripion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(32)");

                    b.Property<string>("PageTitle")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("ParentPageId")
                        .HasColumnType("CHAR(8)");

                    b.Property<string>("SubFolder1")
                        .IsRequired()
                        .HasColumnType("VARCHAR(16)");

                    b.Property<string>("SubFolder2")
                        .IsRequired()
                        .HasColumnType("VARCHAR(28)");

                    b.HasKey("PageId");

                    b.ToTable("BaseWebPageTemplate", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.InboundStockOrder", b =>
                {
                    b.Property<short>("OrderDateNo")
                        .HasColumnType("smallint");

                    b.Property<short>("DaySerialNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<int>("LogNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<DateOnly>("OrderDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("date")
                        .HasComputedColumnSql("CONVERT([DATE], (DATEADD(day, [OrderDateNo], DATEFROMPARTS(2020,1,1))))");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("CHAR(12)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<byte>("SIGNo")
                        .HasColumnType("tinyint");

                    b.Property<short>("StockNo")
                        .HasColumnType("smallint");

                    b.Property<short>("SupplierNo")
                        .HasColumnType("smallint");

                    b.Property<decimal>("TotalAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(10,2)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("TotalQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<short>("UniqueProductCount")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("OrderDateNo", "DaySerialNo");

                    b.HasIndex("OrderNo")
                        .IsUnique();

                    b.HasIndex("StockNo");

                    b.HasIndex("SupplierNo");

                    b.HasIndex("OrderId", "SIGNo")
                        .IsUnique();

                    b.ToTable("InboundStockOrder", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.InboundStockOrderDetail", b =>
                {
                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<short>("ItemNo")
                        .HasColumnType("smallint");

                    b.Property<int>("ProductNo")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<decimal>("SubAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18,2)")
                        .HasComputedColumnSql("[Quantity] * [UnitCost]");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("DECIMAL(8, 2)");

                    b.HasKey("OrderNo", "ItemNo");

                    b.HasIndex("ProductNo");

                    b.ToTable("InboundStockOrderDetail", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.Member", b =>
                {
                    b.Property<int>("MemberNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberNo"));

                    b.Property<byte?>("Birthday_Day")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Birthday_Month")
                        .HasColumnType("tinyint");

                    b.Property<string>("Birthday_MonthDay")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<string>("MemberId")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("PersonNo")
                        .HasColumnType("int");

                    b.Property<int?>("PersonNo1")
                        .HasColumnType("int");

                    b.Property<byte>("ProductPriceNo")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remark")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<byte>("SIGNo")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("MemberNo");

                    b.HasIndex("PersonNo1");

                    b.ToTable("Member", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.Menuitem", b =>
                {
                    b.Property<short>("NodeNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("NodeNo"));

                    b.Property<string>("AspAction")
                        .HasColumnType("VARCHAR(16)");

                    b.Property<string>("AspController")
                        .HasColumnType("VARCHAR(28)");

                    b.Property<string>("AspPage")
                        .IsRequired()
                        .HasColumnType("VARCHAR(48)");

                    b.Property<short>("AspRouteNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DataFeather")
                        .IsRequired()
                        .HasColumnType("VARCHAR(16)");

                    b.Property<bool>("HasChildNode")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsInvisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsIsolated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ItemDescription")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("NodeId")
                        .IsRequired()
                        .HasColumnType("CHAR(8)");

                    b.Property<string>("NodeName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<short>("OrderNo")
                        .HasColumnType("smallint");

                    b.Property<string>("ParentNodeId")
                        .HasColumnType("CHAR(8)");

                    b.Property<string>("Remark")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<byte>("RoleTypeFlag")
                        .HasColumnType("tinyint");

                    b.Property<short>("ThresholdPermissionValue")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("VARCHAR(8)");

                    b.HasKey("NodeNo");

                    b.HasIndex("NodeId")
                        .IsUnique();

                    b.HasIndex("ParentNodeId");

                    b.ToTable("Menuitem", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.MenuitemAppUser", b =>
                {
                    b.Property<short>("NodeNo")
                        .HasColumnType("smallint");

                    b.Property<short>("AppUserNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsReadonly")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("NodeNo", "AppUserNo");

                    b.HasIndex("AppUserNo");

                    b.ToTable("MenuitemAppUser", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.MenuitemPermissionGroup", b =>
                {
                    b.Property<short>("NodeNo")
                        .HasColumnType("smallint");

                    b.Property<short>("PermissionGroupNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsReadonly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("NodeNo", "PermissionGroupNo");

                    b.HasIndex("PermissionGroupNo");

                    b.ToTable("MenuitemPermissionGroup", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.MenuitemSIG", b =>
                {
                    b.Property<short>("NodeNo")
                        .HasColumnType("smallint");

                    b.Property<byte>("SIGNo")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInvisible")
                        .HasColumnType("bit");

                    b.Property<string>("NodeName")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<short?>("OrderNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("NodeNo", "SIGNo");

                    b.HasIndex("OrderNo");

                    b.ToTable("MenuitemSIG", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.OperationClassStock", b =>
                {
                    b.Property<byte>("OperationClassNo")
                        .HasColumnType("tinyint");

                    b.Property<short>("StockNo")
                        .HasColumnType("smallint");

                    b.Property<bool>("AllowFromThisStock")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowToThisStock")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<short?>("OrderPriorityNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("OperationClassNo", "StockNo");

                    b.HasIndex("StockNo");

                    b.ToTable("OperationClassStock", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.PermissionGroup", b =>
                {
                    b.Property<short>("PermissionGroupNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("NEXT VALUE FOR psi.seqPermissionGroup");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<short?>("DepartmentNo")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsInvisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("PermissionGroupId")
                        .HasColumnType("CHAR(24)");

                    b.Property<string>("PermissionGroupName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<short?>("PositionNo")
                        .HasColumnType("smallint");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<byte>("SIGNo")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("PermissionGroupNo");

                    b.HasIndex("DepartmentNo");

                    b.HasIndex("PositionNo");

                    b.HasIndex("PermissionGroupId", "SIGNo")
                        .IsUnique()
                        .HasFilter("[PermissionGroupId] IS NOT NULL");

                    b.ToTable("PermissionGroup", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.PermissionGroupAppUser", b =>
                {
                    b.Property<short>("PermissionGroupNo")
                        .HasColumnType("smallint");

                    b.Property<short>("UserNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("PermissionGroupNo", "UserNo");

                    b.HasIndex("UserNo");

                    b.ToTable("PermissionGroupAppUser", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.Product", b =>
                {
                    b.Property<int>("ProductNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR psi.seqProduct");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("CHAR(32)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsInvisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsNotForOrderProcessing")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsParentalProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<int?>("ParentProductNo")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasMaxLength(32)
                        .HasColumnType("CHAR(32)");

                    b.Property<string>("ProductIdFromSupplier")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("CHAR(32)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<byte>("SIGNo")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("ProductNo");

                    b.HasIndex("Barcode");

                    b.HasIndex("ParentProductNo");

                    b.HasIndex("ProductId", "SIGNo")
                        .IsUnique()
                        .HasFilter("[ProductId] IS NOT NULL");

                    b.ToTable("Product", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductCost", b =>
                {
                    b.Property<int>("ProductNo")
                        .HasColumnType("int");

                    b.Property<byte>("CostNo")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("DECIMAL(8, 2)");

                    b.HasKey("ProductNo", "CostNo");

                    b.ToTable("ProductCost", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductCostDefinition", b =>
                {
                    b.Property<byte>("SIGNo")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CostNo")
                        .HasColumnType("tinyint");

                    b.Property<string>("CostDefinitionName")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("SIGNo", "CostNo");

                    b.ToTable("ProductCostDefinition", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductGeneralCategory", b =>
                {
                    b.Property<int>("ProductNo")
                        .HasColumnType("int");

                    b.Property<byte>("PGCategoryNo")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<short?>("PGCItemNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("ProductNo", "PGCategoryNo");

                    b.HasIndex("PGCItemNo");

                    b.HasIndex("PGCategoryNo");

                    b.ToTable("ProductGeneralCategory", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductGeneralCategoryDefinition", b =>
                {
                    b.Property<byte>("PGCategoryNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("NEXT VALUE FOR psi.seqProductGeneralCategoryDefinition");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsInvisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsProductIdStructure")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<byte>("ItemIdMaxLength")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<byte>("ItemIdMinLength")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<short>("PGCOrderNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.Property<string>("PGCategoryId")
                        .IsRequired()
                        .HasColumnType("CHAR(16)");

                    b.Property<string>("PGCategoryName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<byte>("SIGNo")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("PGCategoryNo");

                    b.HasIndex("PGCOrderNo");

                    b.HasIndex("PGCategoryId", "SIGNo")
                        .IsUnique();

                    b.ToTable("ProductGeneralCategoryDefinition", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductGeneralCategoryItem", b =>
                {
                    b.Property<short>("PGCItemNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("NEXT VALUE FOR psi.seqProductGeneralCategoryItem");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("PGCItemColorHex")
                        .HasColumnType("CHAR(6)");

                    b.Property<string>("PGCItemId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("CHAR(16)");

                    b.Property<string>("PGCItemImagePathFileName")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<string>("PGCItemName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int?>("PGCItemNumericValue")
                        .HasColumnType("int");

                    b.Property<short>("PGCItemOrderNo")
                        .HasColumnType("smallint");

                    b.Property<byte>("PGCategoryNo")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("PGCItemNo");

                    b.HasIndex("PGCategoryNo");

                    b.HasIndex("PGCategoryNo", "PGCItemId")
                        .IsUnique();

                    b.ToTable("ProductGeneralCategoryItem", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductIdStructureDefinition", b =>
                {
                    b.Property<short>("PGCOrderNo")
                        .HasColumnType("smallint");

                    b.Property<byte>("SIGNo")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<byte>("PGCategoryNo")
                        .HasColumnType("tinyint");

                    b.HasKey("PGCOrderNo", "SIGNo");

                    b.HasIndex("PGCategoryNo");

                    b.ToTable("ProductIdStructureDefinition", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductPrice", b =>
                {
                    b.Property<int>("ProductNo")
                        .HasColumnType("int");

                    b.Property<byte>("PriceNo")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("DECIMAL(8, 2)");

                    b.HasKey("ProductNo", "PriceNo");

                    b.ToTable("ProductPrice", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductPriceDefinition", b =>
                {
                    b.Property<byte>("SIGNo")
                        .HasColumnType("tinyint");

                    b.Property<byte>("PriceNo")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsInitial")
                        .HasColumnType("bit");

                    b.Property<byte?>("ParentPriceNo")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("PercentageToParent")
                        .HasColumnType("DECIMAL(5, 3)");

                    b.Property<string>("PriceDefinitionDisplayName")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("PriceDefinitionName")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<byte>("RoundUpDigitNumber")
                        .HasColumnType("tinyint");

                    b.HasKey("SIGNo", "PriceNo");

                    b.ToTable("ProductPriceDefinition", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductStock", b =>
                {
                    b.Property<short>("StockNo")
                        .HasColumnType("smallint");

                    b.Property<int>("ProductNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<short>("InTransitQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.Property<int>("LogNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<short>("PreOrderQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.Property<int>("SellableQty")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("[StockQty] - [InTransitQty] - [PreOrderQty]");

                    b.Property<int>("StockQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("StockNo", "ProductNo");

                    b.ToTable("ProductStock", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductSupplier", b =>
                {
                    b.Property<int>("ProductNo")
                        .HasColumnType("int");

                    b.Property<short>("SupplierNo")
                        .HasColumnType("smallint");

                    b.Property<byte>("ItemNo")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("ProductNo", "SupplierNo", "ItemNo");

                    b.HasIndex("SupplierNo");

                    b.ToTable("ProductSupplier", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.Stock", b =>
                {
                    b.Property<short>("StockNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("NEXT VALUE FOR psi.seqStock");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsLinkToStore")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<short?>("ParentStockNo")
                        .HasColumnType("smallint");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<byte>("SIGNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<string>("StockId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("CHAR(16)");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("StockNameAbbr")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("StockNo");

                    b.HasIndex("ParentStockNo");

                    b.HasIndex("StockId", "SIGNo")
                        .IsUnique();

                    b.ToTable("Stock", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.StockTransferOrder", b =>
                {
                    b.Property<short>("OrderDateNo")
                        .HasColumnType("smallint");

                    b.Property<short>("DaySerialNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<short>("FromStockNo")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<int>("LogNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<DateOnly>("OrderDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("date")
                        .HasComputedColumnSql("CONVERT([DATE], (DATEADD(day, [OrderDateNo], DATEFROMPARTS(2020,1,1))))");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("CHAR(12)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<byte>("SIGNo")
                        .HasColumnType("tinyint");

                    b.Property<short>("ToStockNo")
                        .HasColumnType("smallint");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.Property<short>("UniqueProductCount")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("OrderDateNo", "DaySerialNo");

                    b.HasIndex("OrderNo")
                        .IsUnique();

                    b.HasIndex("ToStockNo");

                    b.HasIndex("FromStockNo", "ToStockNo");

                    b.HasIndex("OrderId", "SIGNo")
                        .IsUnique();

                    b.ToTable("StockTransferOrder", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.StockTransferOrderDetail", b =>
                {
                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<short>("ItemNo")
                        .HasColumnType("smallint");

                    b.Property<int>("ProductNo")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.HasKey("OrderNo", "ItemNo");

                    b.HasIndex("ProductNo");

                    b.ToTable("StockTransferOrderDetail", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.Store", b =>
                {
                    b.Property<short>("StoreNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("NEXT VALUE FOR psi.seqStore");

                    b.Property<short?>("CompanyNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsVirtualStore")
                        .HasColumnType("bit");

                    b.Property<short?>("ParentStoreNo")
                        .HasColumnType("smallint");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<byte>("SIGNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<string>("StoreId")
                        .HasMaxLength(16)
                        .HasColumnType("CHAR(16)");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("StoreNameAbbr")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<short?>("StoreRegionNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("StoreNo");

                    b.HasIndex("CompanyNo");

                    b.HasIndex("StoreRegionNo");

                    b.HasIndex("StoreId", "SIGNo")
                        .IsUnique()
                        .HasFilter("[StoreId] IS NOT NULL");

                    b.ToTable("Store", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.StoreRegion", b =>
                {
                    b.Property<short>("StoreRegionNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("NEXT VALUE FOR psi.seqStoreRegion");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<short?>("ParentStoreRegionNo")
                        .HasColumnType("smallint");

                    b.Property<byte>("SIGNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<string>("StoreRegionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StoreRegionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("StoreRegionNo");

                    b.HasIndex("ParentStoreRegionNo");

                    b.HasIndex("StoreRegionId", "SIGNo")
                        .IsUnique()
                        .HasFilter("[StoreRegionId] IS NOT NULL");

                    b.ToTable("StoreRegion", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.Supplier", b =>
                {
                    b.Property<short>("SupplierNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("NEXT VALUE FOR psi.seqSupplier");

                    b.Property<byte?>("BillingPeriodDay")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("BillingPeriodType")
                        .HasColumnType("tinyint");

                    b.Property<short>("CompanyNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<byte>("CurrencyNo")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<byte?>("PaymentPeriodDay")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PaymentPeriodType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<byte>("SIGNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<short?>("StockNo_Default")
                        .HasColumnType("smallint");

                    b.Property<short>("SupplierGroupNo")
                        .HasColumnType("smallint");

                    b.Property<string>("SupplierId")
                        .HasMaxLength(16)
                        .HasColumnType("CHAR(16)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("SupplierNameAbbr")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("SupplierNo");

                    b.HasIndex("CompanyNo");

                    b.HasIndex("SupplierId", "SIGNo")
                        .IsUnique()
                        .HasFilter("[SupplierId] IS NOT NULL");

                    b.ToTable("Supplier", "psi");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.SupplierGroup", b =>
                {
                    b.Property<string>("SupplierGroupId")
                        .HasColumnType("CHAR(16)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<short>("CreatedPerson")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeletedPerson")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsSystemPredefined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Remark")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<byte>("SIGNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<short?>("StockNo_Default")
                        .HasColumnType("smallint");

                    b.Property<string>("SupplierGroupName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("SupplierGroupNameAbbr")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<short>("SupplierGroupNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("NEXT VALUE FOR psi.seqSupplierGroup");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("UpdatedPerson")
                        .HasColumnType("smallint");

                    b.HasKey("SupplierGroupId");

                    b.HasIndex("StockNo_Default");

                    b.HasIndex("SupplierGroupId", "SIGNo")
                        .IsUnique();

                    b.ToTable("SupplierGroup", "psi");
                });

            modelBuilder.Entity("SBRPData.Models.CompanyContactPerson", b =>
                {
                    b.HasOne("SBRPData.Models.Company", "Company")
                        .WithMany("CompanyContactPersons")
                        .HasForeignKey("CompanyNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SBRPData.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonNo");

                    b.Navigation("Company");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SBRPData.Models.Department", b =>
                {
                    b.HasOne("SBRPData.Models.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionNo");

                    b.HasOne("SBRPData.Models.Department", "ParentDepartment")
                        .WithMany()
                        .HasForeignKey("ParentDepartmentNo");

                    b.Navigation("Division");

                    b.Navigation("ParentDepartment");
                });

            modelBuilder.Entity("SBRPData.Models.Employee", b =>
                {
                    b.HasOne("SBRPData.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SBRPData.Models.PersonContactPhone", b =>
                {
                    b.HasOne("SBRPData.Models.Person", "Person")
                        .WithMany("PersonContactPhones")
                        .HasForeignKey("PersonNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SBRPData.Models.User", b =>
                {
                    b.HasOne("SBRPData.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SBRPData.Models.UserLoginToken", b =>
                {
                    b.HasOne("SBRPData.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.AppUser", b =>
                {
                    b.HasOne("SBRPData.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.BaseWebPageSIG", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.BaseWebPageTemplate", "BaseWebPageTemplate")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SBRPDataPsi.Models.BaseWebPageSIG", "ParentBaseWebPageSIG")
                        .WithMany()
                        .HasForeignKey("ParentSIGPageNo");

                    b.HasOne("SBRPDataPsi.Models.MenuitemSIG", "MenuitemSIG")
                        .WithMany()
                        .HasForeignKey("NodeNo", "SIGNo");

                    b.Navigation("BaseWebPageTemplate");

                    b.Navigation("MenuitemSIG");

                    b.Navigation("ParentBaseWebPageSIG");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.InboundStockOrder", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SBRPDataPsi.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.InboundStockOrderDetail", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.InboundStockOrder", null)
                        .WithMany("InboundStockOrderDetails")
                        .HasForeignKey("OrderNo")
                        .HasPrincipalKey("OrderNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SBRPDataPsi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.Member", b =>
                {
                    b.HasOne("SBRPData.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonNo1");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.MenuitemAppUser", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SBRPDataPsi.Models.Menuitem", "Menuitem")
                        .WithMany()
                        .HasForeignKey("NodeNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Menuitem");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.MenuitemPermissionGroup", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.Menuitem", "Menuitem")
                        .WithMany()
                        .HasForeignKey("NodeNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SBRPDataPsi.Models.PermissionGroup", "PermissionGroup")
                        .WithMany()
                        .HasForeignKey("PermissionGroupNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menuitem");

                    b.Navigation("PermissionGroup");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.MenuitemSIG", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.Menuitem", "Menuitem")
                        .WithMany()
                        .HasForeignKey("NodeNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menuitem");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.OperationClassStock", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.PermissionGroup", b =>
                {
                    b.HasOne("SBRPData.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentNo");

                    b.HasOne("SBRPData.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionNo");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.PermissionGroupAppUser", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.PermissionGroup", "PermissionGroup")
                        .WithMany()
                        .HasForeignKey("PermissionGroupNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SBRPDataPsi.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PermissionGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductCost", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.Product", "Product")
                        .WithMany("ProductCosts")
                        .HasForeignKey("ProductNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductGeneralCategory", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.ProductGeneralCategoryItem", "ProductGeneralCategoryItem")
                        .WithMany()
                        .HasForeignKey("PGCItemNo");

                    b.HasOne("SBRPDataPsi.Models.ProductGeneralCategoryDefinition", "ProductGeneralCategoryDefinition")
                        .WithMany()
                        .HasForeignKey("PGCategoryNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SBRPDataPsi.Models.Product", "Product")
                        .WithMany("ProductGeneralCategories")
                        .HasForeignKey("ProductNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductGeneralCategoryDefinition");

                    b.Navigation("ProductGeneralCategoryItem");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductGeneralCategoryItem", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.ProductGeneralCategoryDefinition", "ProductGeneralCategoryDefinition")
                        .WithMany()
                        .HasForeignKey("PGCategoryNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductGeneralCategoryDefinition");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductIdStructureDefinition", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.ProductGeneralCategoryDefinition", "ProductGeneralCategoryDefinition")
                        .WithMany()
                        .HasForeignKey("PGCategoryNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductGeneralCategoryDefinition");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductPrice", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.Product", "Product")
                        .WithMany("ProductPrices")
                        .HasForeignKey("ProductNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.ProductSupplier", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.Product", "Product")
                        .WithMany("ProductSuppliers")
                        .HasForeignKey("ProductNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SBRPDataPsi.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.Stock", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.Stock", "ParentStock")
                        .WithMany()
                        .HasForeignKey("ParentStockNo");

                    b.Navigation("ParentStock");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.StockTransferOrder", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.Stock", "FromStock")
                        .WithMany()
                        .HasForeignKey("FromStockNo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SBRPDataPsi.Models.Stock", "ToStock")
                        .WithMany()
                        .HasForeignKey("ToStockNo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FromStock");

                    b.Navigation("ToStock");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.StockTransferOrderDetail", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.StockTransferOrder", null)
                        .WithMany("StockTransferOrderDetails")
                        .HasForeignKey("OrderNo")
                        .HasPrincipalKey("OrderNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SBRPDataPsi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.Store", b =>
                {
                    b.HasOne("SBRPData.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyNo");

                    b.HasOne("SBRPDataPsi.Models.StoreRegion", "StoreRegion")
                        .WithMany()
                        .HasForeignKey("StoreRegionNo");

                    b.Navigation("Company");

                    b.Navigation("StoreRegion");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.StoreRegion", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.StoreRegion", "ParentStoreRegion")
                        .WithMany()
                        .HasForeignKey("ParentStoreRegionNo");

                    b.Navigation("ParentStoreRegion");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.Supplier", b =>
                {
                    b.HasOne("SBRPData.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.SupplierGroup", b =>
                {
                    b.HasOne("SBRPDataPsi.Models.Stock", "Stock_Default")
                        .WithMany()
                        .HasForeignKey("StockNo_Default");

                    b.Navigation("Stock_Default");
                });

            modelBuilder.Entity("SBRPData.Models.Company", b =>
                {
                    b.Navigation("CompanyContactPersons");
                });

            modelBuilder.Entity("SBRPData.Models.Person", b =>
                {
                    b.Navigation("PersonContactPhones");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.InboundStockOrder", b =>
                {
                    b.Navigation("InboundStockOrderDetails");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.Product", b =>
                {
                    b.Navigation("ProductCosts");

                    b.Navigation("ProductGeneralCategories");

                    b.Navigation("ProductPrices");

                    b.Navigation("ProductSuppliers");
                });

            modelBuilder.Entity("SBRPDataPsi.Models.StockTransferOrder", b =>
                {
                    b.Navigation("StockTransferOrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
