@model ProductViewModel

@functions {
    public string GetProductCostDefinitionName(byte _costNo)
    {
        if (ViewData[AppSystem.VD_ProductCostDefinition_List] == null) return string.Empty;

        var list = (List<ProductCostDefinition>)ViewData[AppSystem.VD_ProductCostDefinition_List];
        if (list == null || list.Any() == false) return string.Empty;

        return list
            .Where(c => c.CostNo == _costNo)
            .FirstOrDefault()?
            .CostDefinitionName
            ?? string.Empty;
    }
    public string GetProductPriceDefinitionName(int _priceNo)
    {
        if (ViewData[AppSystem.VD_ProductPriceDefinition_List] == null) return string.Empty;

        var list = (List<ProductPriceDefinition>)ViewData[AppSystem.VD_ProductPriceDefinition_List];
        if (list == null || list.Any() == false) return string.Empty;

        return list
            .Where(c => c.PriceNo == _priceNo)
            .FirstOrDefault()?
            .PriceDefinitionName
            ?? string.Empty;
    }
}

<input type="hidden" asp-for="@Model.ProductNo" />


<div class="container-fluid bg-light p-4 mb-4 rounded">
    <div class="row flex-box">
        <div class="items col-md-4">
            <div class="form-group">
                <label asp-for="@Model.ProductId"></label>
                <input type="text" asp-for="@Model.ProductId"
                       autofocus
                       disabled="@Model.HtmlAttrDisabledForIdField"
                       readonly="@Model.IsReadonlyForIdField"
                       class="form-control form-input-id" />
                <span asp-validation-for="@Model.ProductId" class="text-danger"></span>
            </div>
        </div>


        <div class="items col-md-4">
            <div class="form-group">
                <label asp-for="@Model.ProductName"></label>
                <input type="text" asp-for="@Model.ProductName"
                       readonly="@Model.IsReadonly"
                       class="form-control" />
                <span asp-validation-for="@Model.ProductName" class="text-danger"></span>
            </div>
        </div>



        <div class="w-100"></div>
        <div class="items col-md-4">
            <div class="form-group">
                <label asp-for="@Model.Barcode"></label>
                <input type="text" asp-for="@Model.Barcode"
                       readonly="@Model.IsReadonly"
                       class="form-control" />
                <span asp-validation-for="@Model.Barcode" class="text-danger"></span>
            </div>
        </div>


        <div class="w-100"></div>
        <div class="items col-md-4">
            <div class="form-group">
                <label asp-for="@Model.ProductSuppliers[(byte)SBRPDataPsi.ProductCostEnum.PurchaseCost].SupplierNo">
                    供應商
                </label>
                <input type="hidden" asp-for="@Model.ProductSuppliers[(byte)SBRPDataPsi.ProductCostEnum.PurchaseCost].ProductNo" />
                <input type="hidden" asp-for="@Model.ProductSuppliers[(byte)SBRPDataPsi.ProductCostEnum.PurchaseCost].ItemNo" />
                <select asp-for="@Model.ProductSuppliers[(byte)SBRPDataPsi.ProductCostEnum.PurchaseCost].SupplierNo"
                        asp-items="@((List<SelectListItem>)ViewData[AppSystem.VD_Supplier_SLI])"
                        disabled="@Model.HtmlAttrDisabled"
                        class="form-control">
                    <option value=""></option>
                </select>
            </div>
        </div>


        <div class="items col-md-4">
            <div class="form-group">
                <label asp-for="@Model.ProductIdFromSupplier"></label>
                <input type="text" asp-for="@Model.ProductIdFromSupplier"
                       readonly="@Model.IsReadonly"
                       class="form-control" />
                <span asp-validation-for="@Model.ProductIdFromSupplier" class="text-danger"></span>
            </div>
        </div>



        <div class="w-100"></div>
        <div class="items col-md-4">
            <div class="form-group">
                <label asp-for="@Model.ProductCosts[(byte)SBRPDataPsi.ProductCostEnum.PurchaseCost].UnitCost">
                    @GetProductCostDefinitionName((byte)SBRPDataPsi.ProductCostEnum.PurchaseCost)
                </label>
                <input type="hidden" asp-for="@Model.ProductCosts[(byte)SBRPDataPsi.ProductCostEnum.PurchaseCost].ProductNo" />
                <input type="hidden" asp-for="@Model.ProductCosts[(byte)SBRPDataPsi.ProductCostEnum.PurchaseCost].CostNo" />
                <div class="input-group">
                    <input type="number"
                           asp-for="@Model.ProductCosts[(byte)SBRPDataPsi.ProductCostEnum.PurchaseCost].UnitCost"
                           readonly="@Model.IsReadonly"
                           class="form-control" />
                </div>
            </div>
        </div>
        <div class="items col-md-4">
            <div class="form-group">
                <label asp-for="@Model.ProductCosts[(byte)SBRPDataPsi.ProductCostEnum.SaleCost].UnitCost">
                    @GetProductCostDefinitionName((byte)SBRPDataPsi.ProductCostEnum.SaleCost)
                </label>
                <input type="hidden" asp-for="@Model.ProductCosts[(byte)SBRPDataPsi.ProductCostEnum.SaleCost].ProductNo" />
                <input type="hidden" asp-for="@Model.ProductCosts[(byte)SBRPDataPsi.ProductCostEnum.SaleCost].CostNo" />
                <div class="input-group">
                    <input type="number"
                           asp-for="@Model.ProductCosts[(byte)SBRPDataPsi.ProductCostEnum.SaleCost].UnitCost"
                           readonly="@Model.IsReadonly"
                           class="form-control" />
                </div>
            </div>
        </div>



        <div class="w-100"></div>
        <div class="items col-md-4">
            <div class="form-group">
                <label for="txtProductPrice0">
                    @GetProductPriceDefinitionName(0)
                </label>
                <div class="input-group">
                    <input type="number"
                           id="txtProductPrice0"
                           readonly="@Model.IsReadonly"
                           class="form-control" />
                    <a href="#dvPanelPrice" class="open-popup-link btn btn-secondary">
                        ...
                    </a>
                </div>
            </div>
        </div>



        <div class="w-100"></div>
        <div class="items col-md-12">
            <div class="form-group">
                <label asp-for="Remark"></label>
                <input type="text" asp-for="Remark"
                       readonly="@Model.IsReadonly"
                       multiple="multiple"
                       class="form-control form-input-remark" />
            </div>
        </div>
    </div>
</div>




<partial name="~/Pages/Shared/Products/_ProductGeneralCategoryEntitiesPartial.cshtml" model="Model" />








@*<div class="inner bg-blue-lighter mb-4">
    <h4>
    </h4>
    <div class="flex-box">
        <div class="items cols-4">
            <div class="form-group">

            </div>
        </div>
    </div>
</div>*@

















<div id="dvPanelPrice" class="container-fluid bg-light p-4 mb-4 rounded white-popup-block mfp-hide">
    <h4 class="mb-4">Product Pricing</h4>
    <div class="row">
        @{
            int idx = default;
            foreach (var item in Model.ProductPrices)
            {
                <div class="items col-md-4">
                    <div class="form-group">
                        <label asp-for="@Model.ProductPrices[idx].UnitPrice">
                            @GetProductPriceDefinitionName(item.PriceNo)
                        </label>
                        <input type="hidden" asp-for="@Model.ProductPrices[idx].ProductNo" />
                        <input type="hidden" asp-for="@Model.ProductPrices[idx].PriceNo" />
                        <input type="number" asp-for="@Model.ProductPrices[idx].UnitPrice"
                               id="@($"txtProductPrice_Panel_{idx.ToString()}")"
                               readonly="@Model.IsReadonly"
                               class="form-control" />
                    </div>
                </div>
                idx++;
            }
        }
    </div>
</div>
