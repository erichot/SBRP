@page
@model SBRPWebPsi.Pages.Rmshqs.Reports.SaleOrderPivotModel
@{
    Layout = "_LayoutRmshq";
}



<form id="form1" method="post">
    <div class="panel-body">
        <table class="table table-form2">
            <tr>
                <th>
                    搜尋
                </th>
                <td >
                    <div class="input-group">
                        <input id="txtSearchKeyword" style="width:300px"
                               type="text" asp-for="@Model.PG_Filter.SearchKeywordArray" 
                               onfocus="this.select();"
                               placeholder="請輸入搜尋的品項。若有多組搜尋，請以空白鍵合併多個關鍵字"
                               class="form-control" />

                        <button id="btnSearch" class="btn btn-primary btn-refresh"
                                asp-page-handler="Search"
                                onclick="fnSearch_OnClick();"
                                accesskey="R" title="（快速鍵：Alt + R）"
                                style="width:120px" >
                            搜尋(R)
                        </button>
                    </div>
                </td>
                <td>
                    <div class="input-group">
                        <div class="form-check">
                            <label class="form-check-label" title="（快速鍵：Alt + C）">
                                <input asp-for="@Model.PG_Filter.IsGroupByColor" type="checkbox"
                                       id="chkIsGroupByColor"
                                       accesskey="C" class="form-check-input" />
                                依顏色分類(C)
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label" title="（快速鍵：Alt + S）">
                                <input asp-for="@Model.PG_Filter.IsGroupBySize" type="checkbox"
                                       id="chkIsGroupBySize"
                                       accesskey="S" class="form-check-input" />
                                依尺寸分類(S)
                            </label>
                        </div>
                        <div>
                            &nbsp;
                        </div>
                        &nbsp; &nbsp; &nbsp;
                        <button type="button" class="btn" 
                                data-toggle="tooltip" title="將［依顏色分類] & ［依顏色分類] 分別反轉其選取結果"
                                onclick="btnGroupSizeOrColorRevert_Click();">
                            <i class="fa-solid fa-yin-yang"></i>
                        </button>
                        
                    </div>
                </td>
            </tr>
            <tr>
                <th>
                    日期篩選
                </th>
                <td colspan="3">
                    <div class="row">
                        <div class="col-6">
                            <div class="input-group">
                                <input type="date" id="txtDate1"
                                       asp-for="@Model.PG_Filter.Date1"
                                       max="2999-12-31" class="form-control" />
                                <span class="input-group-text">
                                    
                                    ~
                                </span>
                                <input type="date" id="txtDate2" 
                                       asp-for="@Model.PG_Filter.Date2"
                                       max="2999-12-31" class="form-control" />
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="input-group">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="rdoDateRange" id="rdoEmpty" onclick="fnDateRange_Set(0);" />
                                    <label class="form-check-label" for="rdoEmpty">
                                        清除
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="rdoDateRange" id="rdoLastWeek" onclick="fnDateRange_Set(24);" />
                                    <label class="form-check-label" for="rdoLastWeek">
                                        上週
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="rdoDateRange" id="rdoThisWeek" onclick="fnDateRange_Set(25);" />
                                    <label class="form-check-label" for="rdoThisWeek">
                                        本周
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="rdoDateRange" id="rdoLastMonth" onclick="fnDateRange_Set(34);" />
                                    <label class="form-check-label" for="rdoLastMonth">
                                        前月
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="rdoDateRange" id="rdoThisMonth" onclick="fnDateRange_Set(35);" />
                                    <label class="form-check-label" for="rdoThisMonth">
                                        本月
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="rdoDateRange" id="rdoThisSession" onclick="fnDateRange_Set(44);" />
                                    <label class="form-check-label" for="rdoThisSession">
                                        本季
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="rdoDateRange" id="rdoThisYear" onclick="fnDateRange_Set(55);" />
                                    <label class="form-check-label" for="rdoThisYear">
                                        今年
                                    </label>
                                </div>
                            </div>                    
                        </div>
                       
                    </div>
                    
                </td>
            </tr>
            <tr>
                <th>
                    門市欄位
                </th>
                <td colspan="3">
                    
                    
                    <div class='demo-section k-header' style='width:100%'>
                        <select multiple='multiple' id='multi-select_EducationSchools'                                
                                asp-items="@((IEnumerable<SelectListItem>?)ViewData["v_sel_store"])"
                                name='multi-select_EducationSchools' placeholder='畢業學校' data-placeholder='全選'>
                        </select>
                        <input id="hdnStoreSelection" asp-for="@Model.PG_Filter.StoreSelectionArray" type="hidden" />
                    </div>
                </td>
            </tr>
            <tr>
                <th>
                    說明
                </th>
                <td colspan="3">

                    可依照需求查看或下載該單位區間銷售數據，如下範例 <br/>
                    搜尋輸入028，條件欄位皆無勾選則呈現BRA028A、BRA028B銷售加總；<br />
                    搜尋輸入028，條件欄位皆勾選則呈現BRA028A-BL-32A、BRA028A-BL-32B…的完整銷售數量<br />
                    搜尋輸入028A，條件欄位勾選依顏色分類，則會呈現BRA028A-BL、BRA028A-PI、BRA028A-SK的銷售加總<br />
                    搜尋輸入028A，條件欄位勾選依尺寸分類，則會呈現 BRA028A-32A…以尺寸加總銷售量

                </td>
            </tr>
        </table>
    </div>

   

    <div class="table-responsive">
        <table id="tbPivot" class="table table-bordered table-striped table-hover">
            <thead class="table-light">
            </thead>
            <tbody>
            </tbody>
            <tfoot class="table-light">
            </tfoot>
        </table>
    </div>

</form>



       



@section Scripts {
    <script src="~/js/pages/rmshqs/sale.order.pivot.js" asp-append-version="true"></script>

  

    <script>
        const jsIsPostBack = @Model.PG_IsPostBack.ConvertToJS();
        const jsIsGroupBySize = @Model.PG_Filter?.IsGroupBySize.ConvertToJS();
        const jsIsGroupByColor = @Model.PG_Filter?.IsGroupByColor.ConvertToJS();
        const jsFileNameXlsx = '@(Html.Raw(Model.PG_FileNameXlsx))';
        var jsonPvTbData = [];
        jsonPvTbData = @(Html.Raw(Model.PG_PivotTableJsonData??"''"));


        if (jsIsPostBack) renderObjectsToTable(jsonPvTbData, '#tbPivot');
        //console.log('start');
        //renderObjectsToTable(jsonData, '#target');
        @*$(document).ready(function () {



            var jsonData = [];
            jsonData = @(Html.Raw(Model.RazorPageRawJsonData));
            console.log('start');


            renderObjectsToTable(jsonData, '#target');

            function renderObjectsToTable(objects, target) {

                const uniquePropertyNames = [];
                objects.forEach(obj => {
                    for (const prop in obj) {
                        if (!uniquePropertyNames.includes(prop))
                            uniquePropertyNames.push(prop);
                    }
                });

                const header = buildTableHeader(uniquePropertyNames);
                const rows = buildTableBody(uniquePropertyNames, objects);

                const table = document.querySelector(target);
                table.querySelector('thead').append(header);
                table.querySelector('tbody').append(...rows);
            }


            function buildTableHeader(propertyNames) {
                var hasRetrieveProductCode = false;
                var isRegistered = false;
                const headerRow = document.createElement('tr');
                let headerCelllProductCode;
                propertyNames.forEach(prop => {
                    const headerCell = document.createElement('th');
                    headerCell.innerText = prop;

                    if (prop == "ProductCode") {
                        headerCelllProductCode = headerCell;
                        headerRow.prepend(headerCelllProductCode);
                    }
                    else if (prop == "00") {
                        headerRow.insertBefore(headerCell, headerCelllProductCode.nextSibling);
                    }
                    else {
                        headerRow.append(headerCell);
                    }
                });
                return headerRow;
            }

            function buildTableBody(propertyNames, objects) {
                const tableRows = [];
                let tableCellProductCode;
                objects.forEach(obj => {
                    //debugger;
                    const currentRow = document.createElement('tr');
                    propertyNames.forEach(prop => {
                        const tableCell = document.createElement('td');
                        //debugger;
                        const value = (obj[prop] === undefined) ? '' : obj[prop];
                        tableCell.innerText = value;

                        if (prop == "ProductCode") {
                            tableCellProductCode = tableCell;
                            tableCellProductCode.className = "text-nowrap";
                            currentRow.prepend(tableCellProductCode);
                        }
                        else if (prop == "00") {
                            currentRow.insertBefore(tableCell, tableCellProductCode.nextSibling);
                        }
                        else {
                            currentRow.append(tableCell);
                        }
                    });
                    tableRows.push(currentRow);
                });
                return tableRows;
            }

            function goWild() {
                document.querySelector('#target thead').innerHTML = '';
                document.querySelector('#target tbody').innerHTML = '';
                const nodes = document.getElementById('wildList').childNodes;
                renderObjectsToTable(nodes, '#target');
            }

            //new DataTable('#target');
            var DtList = $('#target').DataTable({
                paging: true,
                pageLength: _dtPageLengthLarger,
                pagingType: _dtPageType,
                processing: _dtIsProcessing,
                order: [],
                dom: _dtDomFilterWithExport,
                fixedColumns: true,
                buttons: [
                    {
                        extend: 'excel',
                        text: _dtBtnXlsxText,
                        className: _dtBtnXlsxCss,
                        charset: 'utf-8',
                        titleAttr: _dtBtnXlsxTitle,
                        bom: true
                    }
                ],
                language: {
                    paginate: {
                        first: _dtLngPageFirst,
                        next: _dtLngPageNext,
                        last: _dtLngPageLast,
                        previous: _dtLngPagePrevious
                    },
                    select: {
                        rows: _dtLngSelectRows
                    },
                    lengthMenu: _dtLngLengthMenu,
                    processing: _dtLngProcessing,
                    zeroRecords: _dtLngZero,
                    info: _dtLngInfo,
                    infoFiltered: _dtLngInfoFiltered,
                    loadingRecords: _dtLoadingRecordsText,
                    infoEmpty: _dtLngEmpty
                }
            });


            //jsonData[0].forEach(element => console.log(element));

            //for (let element in jsonData[0]) {
            //    console.log('a', element);
            //}
            //jQuery.each(jsonData[0], function (kk, vv) {
            //    console.log(kk);
            //});


            //$.ajax({
            //    url: 'arrays_short.txt',
            //    success: function (json) {
            //        console.log('xxx');
            //        var tableHeaders;
            //        $.each(json.columns, function (i, val) {
            //            tableHeaders += "<th>" + val + "</th>";
            //        });

            //        $("#tableDiv").empty();
            //        $("#tableDiv").append('<table id="displayTable" class="display" cellspacing="0" width="100%"><thead><tr>' + tableHeaders + '</tr></thead></table>');
            //        //$("#tableDiv").find("table thead tr").append(tableHeaders);

            //        $('#displayTable').dataTable(json);
            //    },
            //    dataType: "json"
            //});





            //jQuery('#btnSubmit').click(function () {

            //    //jQuery("#selection").find(':selected').each(function (e) {
            //    //    var this_input = jQuery(this);
            //    //    if (this_input.is(':selected')) {
            //    //        data.push(this_input.val());
            //    //    }
            //    //});

            //    //$('#divResult').empty().append(PrintTable(data));
            //    $('#divResult').empty().append(PrintTable(jsonData));

            //    function PrintTable(data) {
            //        var html = '<table class="compTable"><thead><tr><th>';
            //        if (data && data.length) {
            //            html += '</th>';

            //            jQuery.each(data, function (i) {
            //                //getting heading at that key
            //                html += '<th>' + data[i].ColHeading + '</th>';
            //            });
            //            html += '</tr>';
            //            html += '<tbody>';
            //            jQuery.each(StatJSON[data[0]], function (k, v) {
            //                html += "<tr>"
            //                if (k != "ColHeading") {
            //                    html += "<td>" + k + "</td>"
            //                }

            //                jQuery.each(data, function (k2, v2) {
            //                    if (k != "ColHeading") {
            //                        html += '<td>' + StatJSON[data[k2]][k] + '</td>';
            //                    }
            //                });
            //                html += '</tr>';
            //            });
            //        } else {
            //            html += 'No results found</td></tr>';
            //        }
            //        html += '</tbody></table>';
            //        return html;
            //    }

            //});






        });*@
    </script>
        }
